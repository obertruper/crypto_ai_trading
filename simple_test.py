import pandas as pd
import numpy as np

def safe_divide_fixed(numerator: pd.Series, denominator: pd.Series, fill_value=0.0) -> pd.Series:
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è safe_divide"""
    # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—è
    min_denominator = 1e-10
    
    # –°–æ–∑–¥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å
    safe_denominator = denominator.copy()
    
    # –ó–∞–º–µ–Ω—è–µ–º –Ω—É–ª–∏ –∏ –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    mask_small = (safe_denominator.abs() < min_denominator)
    safe_denominator[mask_small] = np.sign(safe_denominator[mask_small]) * min_denominator
    safe_denominator[safe_denominator == 0] = min_denominator  # –î–ª—è —Ç–æ—á–Ω—ã—Ö –Ω—É–ª–µ–π
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–ª–µ–Ω–∏–µ
    result = numerator / safe_denominator
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º inf –∏ nan
    # –ï—Å–ª–∏ fill_value - —ç—Ç–æ Series, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥
    if isinstance(fill_value, pd.Series):
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–∑–∏—Ü–∏–∏ —Å inf –∏ –∑–∞–º–µ–Ω—è–µ–º –∏—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∏–∑ fill_value
        inf_mask = np.isinf(result)
        result.loc[inf_mask] = fill_value.loc[inf_mask]
    else:
        # –ï—Å–ª–∏ fill_value - —Å–∫–∞–ª—è—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π replace
        result = result.replace([np.inf, -np.inf], fill_value)
    
    result = result.fillna(fill_value)
    
    return result

# –¢–µ—Å—Ç
print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ safe_divide...")

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
turnover = pd.Series([100, 200, 0, 500, 1000])  # numerator
volume = pd.Series([10, 0, 20, 0.00001, 100])   # denominator (—Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏)
close_prices = pd.Series([50, 45, 60, 55, 70])  # fill_value –∫–∞–∫ Series

print(f"Turnover: {turnover.tolist()}")
print(f"Volume: {volume.tolist()}")
print(f"Close prices: {close_prices.tolist()}")

try:
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å Series –∫–∞–∫ fill_value (—ç—Ç–æ –≤—ã–∑—ã–≤–∞–ª–æ –æ—à–∏–±–∫—É)
    result = safe_divide_fixed(turnover, volume, fill_value=close_prices)
    print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å Series fill_value: {result.tolist()}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ —Å–∫–∞–ª—è—Ä–Ω—ã–º fill_value
    result_scalar = safe_divide_fixed(turnover, volume, fill_value=1.0)
    print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ —Å–∫–∞–ª—è—Ä–Ω—ã–º fill_value: {result_scalar.tolist()}")
    
    print("üéâ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ! –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞.")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
    import traceback
    traceback.print_exc()
