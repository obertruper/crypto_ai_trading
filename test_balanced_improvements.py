#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π
"""

import torch
import yaml

def test_moderate_weights():
    """–¢–µ—Å—Ç —É–º–µ—Ä–µ–Ω–Ω—ã—Ö –≤–µ—Å–æ–≤ –∏ bias"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π...")
    
    from models.patchtst_unified import DirectionalMultiTaskLoss, UnifiedPatchTSTForTrading
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    with open('config/config.yaml', 'r') as f:
        config = yaml.safe_load(f)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º loss —Ñ—É–Ω–∫—Ü–∏—é
    loss_fn = DirectionalMultiTaskLoss(config)
    print(f"\n‚úÖ –£–º–µ—Ä–µ–Ω–Ω—ã–µ –≤–µ—Å–∞ –∫–ª–∞—Å—Å–æ–≤: {loss_fn.class_weights}")
    print(f"   LONG weight: {loss_fn.class_weights[0]:.2f}")
    print(f"   SHORT weight: {loss_fn.class_weights[1]:.2f}")
    print(f"   FLAT weight: {loss_fn.class_weights[2]:.2f}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º warmup
    print(f"\n‚úÖ Warmup –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"   –ù–∞—á–∞–ª—å–Ω—ã–π –≤–µ—Å direction: 1.0")
    print(f"   –ö–æ–Ω–µ—á–Ω—ã–π –≤–µ—Å direction: {loss_fn.directions_weight}")
    print(f"   Warmup —ç–ø–æ—Ö: {loss_fn.warmup_epochs}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –≤–µ—Å–∞
    for epoch in [0, 5, 10, 15]:
        loss_fn.set_epoch(epoch)
        weight = loss_fn.get_dynamic_direction_weight()
        print(f"   –≠–ø–æ—Ö–∞ {epoch}: direction weight = {weight:.2f}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º bias –≤ –º–æ–¥–µ–ª–∏
    model = UnifiedPatchTSTForTrading(config)
    
    print("\n‚úÖ Direction Head biases (—É–º–µ—Ä–µ–Ω–Ω—ã–µ):")
    for name, param in model.direction_head.named_parameters():
        if 'bias' in name and param.shape[0] == 12:
            biases = param.detach().view(4, 3)
            print(f"   LONG bias:  {biases[0, 0]:.3f}")
            print(f"   SHORT bias: {biases[0, 1]:.3f}")
            print(f"   FLAT bias:  {biases[0, 2]:.3f}")
            break
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print(f"\n‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    print(f"   Learning rate: {config['model']['learning_rate']}")
    print(f"   Direction weight (max): {config['loss']['task_weights']['directions']}")
    print(f"   Focal alpha: {config['loss']['focal_alpha']}")
    print(f"   Focal gamma: {config['loss']['focal_gamma']}")
    
    return True


def main():
    """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"""
    print("="*80)
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π")
    print("="*80)
    
    if test_moderate_weights():
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!")
        print("\nüìä –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print("   - –ë–æ–ª–µ–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π")
        print("   - –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ warmup")
        print("   - Direction accuracy –¥–æ–ª–∂–Ω–∞ —Ä–∞—Å—Ç–∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ")
        print("   - –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è: LONG ~20-30%, SHORT ~15-25%, FLAT ~45-65%")
        
        print("\nüöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ–±—É—á–µ–Ω–∏–µ:")
        print("   python main.py --mode train")
    else:
        print("\n‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã!")


if __name__ == "__main__":
    main()