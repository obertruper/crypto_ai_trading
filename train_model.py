#!/usr/bin/env python3
"""
–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ Crypto AI Trading
–ó–∞–ø—É—Å–∫: python train_model.py
"""

import subprocess
import sys
import os
from pathlib import Path

def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if not os.path.exists('config/config.yaml'):
        print("‚ùå –û—à–∏–±–∫–∞: –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞!")
        print("cd /Users/ruslan/PycharmProjects/LLM\\ TRANSFORM/crypto_ai_trading")
        sys.exit(1)
    
    print("="*80)
    print("üöÄ CRYPTO AI TRADING - –û–ë–£–ß–ï–ù–ò–ï –ú–û–î–ï–õ–ò")
    print("="*80)
    print()
    print("üìã –≠—Ç–∞–ø—ã –æ–±—É—á–µ–Ω–∏—è:")
    print("1Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ PostgreSQL")
    print("2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç data leakage")
    print("3Ô∏è‚É£ –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ PatchTST")
    print("4Ô∏è‚É£ –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –±—ç–∫—Ç–µ—Å—Ç–∏–Ω–≥")
    print("5Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª—É—á—à–µ–π –º–æ–¥–µ–ª–∏")
    print()
    print("‚è±Ô∏è  –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è: 30-60 –º–∏–Ω—É—Ç")
    print("="*80)
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç
    cmd = [sys.executable, "main.py", "--mode", "full", "--config", "config/config.yaml"]
    
    try:
        print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ...\n")
        result = subprocess.run(cmd, check=True)
        
        print("\n" + "="*80)
        print("‚úÖ –û–ë–£–ß–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
        print("="*80)
        print()
        print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print("  ‚Ä¢ –ú–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: models_saved/best_model.pth")
        print("  ‚Ä¢ –õ–æ–≥–∏ –æ–±—É—á–µ–Ω–∏—è: experiments/logs/")
        print("  ‚Ä¢ –ú–µ—Ç—Ä–∏–∫–∏: experiments/logs/*_metrics.csv")
        print()
        print("üöÄ –ß—Ç–æ –¥–∞–ª—å—à–µ?")
        print("  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: python run_interactive.py")
        print("  2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±—ç–∫—Ç–µ—Å—Ç: python main.py --mode backtest")
        print("  3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ live —Ç–æ—Ä–≥–æ–≤–ª—é –≤ config/config.yaml")
        print()
        
    except subprocess.CalledProcessError as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏!")
        print(f"–ö–æ–¥ –æ—à–∏–±–∫–∏: {e.returncode}")
        print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL (–ø–æ—Ä—Ç 5555)")
        print("  2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –ë–î")
        print("  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ experiments/logs/")
        sys.exit(1)
        
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –û–±—É—á–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        print("üí° –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ –ø–æ–∑–∂–µ, –∑–∞–ø—É—Å—Ç–∏–≤ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
        sys.exit(0)

if __name__ == "__main__":
    main()