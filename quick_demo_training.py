#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –¥–µ–º–æ –æ–±—É—á–µ–Ω–∏—è
"""

import os
import sys
import yaml
import subprocess
from pathlib import Path

print("üöÄ –ó–∞–ø—É—Å–∫ –¥–µ–º–æ –æ–±—É—á–µ–Ω–∏—è (5 —ç–ø–æ—Ö)")
print("=" * 60)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫—ç—à–∞
cache_file = Path("cache/features_cache.pkl")
if not cache_file.exists():
    print("‚ùå –ö—ç—à –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    print("–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python run_full_pipeline.py --mode data")
    sys.exit(1)

print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∫—ç—à –¥–∞–Ω–Ω—ã—Ö: {cache_file.stat().st_size / (1024*1024):.1f} MB")

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
config_path = Path("config/config.yaml")
with open(config_path, 'r') as f:
    config = yaml.safe_load(f)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ø–æ—Ö
original_epochs = config['model']['epochs']

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 5 —ç–ø–æ—Ö –¥–ª—è –¥–µ–º–æ
config['model']['epochs'] = 5

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
with open(config_path, 'w') as f:
    yaml.dump(config, f, default_flow_style=False, allow_unicode=True)

print(f"üìä –°–∏–º–≤–æ–ª–æ–≤ –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ: {len(config['data']['symbols'])}")
print(f"üî¢ –≠–ø–æ—Ö: {config['model']['epochs']}")
print("=" * 60)

try:
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ
    result = subprocess.run(
        ["python", "run_full_pipeline.py", "--mode", "train"],
        env={**os.environ, 'USE_CACHE_ONLY': '1'}
    )
    
    if result.returncode == 0:
        print("\n‚úÖ –î–µ–º–æ –æ–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏")
        
finally:
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config['model']['epochs'] = original_epochs
    with open(config_path, 'w') as f:
        yaml.dump(config, f, default_flow_style=False, allow_unicode=True)
    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")