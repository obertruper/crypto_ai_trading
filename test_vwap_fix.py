#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è VWAP
"""

import pandas as pd
import numpy as np
import yaml
from sqlalchemy import create_engine

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
with open('config/config.yaml', 'r') as f:
    config = yaml.safe_load(f)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
db_config = config['database']
engine = create_engine(
    f"postgresql://{db_config['user']}:{db_config['password']}@"
    f"{db_config['host']}:{db_config['port']}/{db_config['database']}"
)

print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è VWAP...")

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
query = """
SELECT symbol, datetime, open, high, low, close, volume, turnover
FROM raw_market_data
WHERE symbol = 'BTCUSDT'
ORDER BY datetime DESC
LIMIT 100
"""

df = pd.read_sql(query, engine)
print(f"\nüìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(df)} –∑–∞–ø–∏—Å–µ–π")

# –ü—Ä–∏–º–µ–Ω—è–µ–º feature engineering
from data.feature_engineering import FeatureEngineer
engineer = FeatureEngineer(config)

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏
df_featured = engineer._create_basic_features(df.copy())

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
print("\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã VWAP:")
print(f"VWAP min: {df_featured['vwap'].min():.2f}")
print(f"VWAP max: {df_featured['vwap'].max():.2f}")
print(f"VWAP mean: {df_featured['vwap'].mean():.2f}")

print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã close_vwap_ratio:")
print(f"Min: {df_featured['close_vwap_ratio'].min():.4f}")
print(f"Max: {df_featured['close_vwap_ratio'].max():.4f}")
print(f"Mean: {df_featured['close_vwap_ratio'].mean():.4f}")
print(f"Std: {df_featured['close_vwap_ratio'].std():.4f}")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
problematic = df_featured[df_featured['close_vwap_ratio'] > 2.0]
print(f"\n‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π (>2.0): {len(problematic)}")

if len(problematic) == 0:
    print("‚úÖ VWAP –∏—Å–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ! –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –Ω–æ—Ä–º–µ.")
else:
    print("‚ùå –í—Å–µ –µ—â–µ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å VWAP")
    print(problematic[['datetime', 'close', 'vwap', 'close_vwap_ratio']].head())