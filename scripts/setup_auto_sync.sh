#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç git hooks –∏ cron –∑–∞–¥–∞—á–∏

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

print_header() {
    echo ""
    echo "======================================"
    echo "$1"
    echo "======================================"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "main.py" ] || [ ! -d ".git" ]; then
    print_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ crypto_ai_trading!"
    exit 1
fi

print_header "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Git"

# 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ git hooks
print_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git hooks..."

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ hooks
git config core.hooksPath .githooks
print_success "Git hooks –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã"

# 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ git –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ pull –ø—Ä–∏ push
print_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏..."

# –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π rebase –ø—Ä–∏ pull
git config pull.rebase true
print_success "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π rebase –≤–∫–ª—é—á–µ–Ω"

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º push –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏
git config push.default current
print_success "Push –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏"

# 3. –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (Linux)
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    print_info "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏..."
    
    SERVICE_FILE="/tmp/crypto-git-sync.service"
    TIMER_FILE="/tmp/crypto-git-sync.timer"
    
    # –°–æ–∑–¥–∞–µ–º service —Ñ–∞–π–ª
    cat > $SERVICE_FILE << EOF
[Unit]
Description=Git sync for crypto_ai_trading
After=network.target

[Service]
Type=oneshot
WorkingDirectory=$(pwd)
ExecStart=$(pwd)/scripts/git_sync.sh --once
User=$USER

[Install]
WantedBy=multi-user.target
EOF

    # –°–æ–∑–¥–∞–µ–º timer —Ñ–∞–π–ª (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)
    cat > $TIMER_FILE << EOF
[Unit]
Description=Run Git sync every 5 minutes
Requires=crypto-git-sync.service

[Timer]
OnBootSec=5min
OnUnitActiveSec=5min
Unit=crypto-git-sync.service

[Install]
WantedBy=timers.target
EOF

    print_info "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "sudo cp $SERVICE_FILE /etc/systemd/system/"
    echo "sudo cp $TIMER_FILE /etc/systemd/system/"
    echo "sudo systemctl daemon-reload"
    echo "sudo systemctl enable crypto-git-sync.timer"
    echo "sudo systemctl start crypto-git-sync.timer"
    
# 4. –°–æ–∑–¥–∞–Ω–∏–µ cron –∑–∞–¥–∞—á–∏ (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞)
else
    print_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ cron –¥–ª—è –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏..."
    
    CRON_CMD="*/5 * * * * cd $(pwd) && ./scripts/git_sync.sh --once >> $(pwd)/logs/git_sync.log 2>&1"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è –∑–∞–¥–∞—á–∞
    if ! crontab -l 2>/dev/null | grep -q "crypto_ai_trading.*git_sync"; then
        (crontab -l 2>/dev/null; echo "$CRON_CMD") | crontab -
        print_success "Cron –∑–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)"
    else
        print_warning "Cron –∑–∞–¥–∞—á–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
fi

# 5. –°–æ–∑–¥–∞–Ω–∏–µ git –∞–ª–∏–∞—Å–æ–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
print_info "–°–æ–∑–¥–∞–Ω–∏–µ git –∞–ª–∏–∞—Å–æ–≤..."

git config alias.sync '!bash ./scripts/git_sync.sh'
git config alias.autopush '!git add . && git commit -m "Auto-commit: $(date)" && git push'
git config alias.status-all '!git fetch && git status && echo "=== Remote changes ===" && git log HEAD..origin/main --oneline'

print_success "Git –∞–ª–∏–∞—Å—ã —Å–æ–∑–¥–∞–Ω—ã:"
echo "  - git sync       # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è"
echo "  - git autopush   # –ë—ã—Å—Ç—Ä—ã–π –∫–æ–º–º–∏—Ç –∏ push"  
echo "  - git status-all # –ü–æ–ª–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏"

# 6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ fetch
print_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ fetch..."

# –í–∫–ª—é—á–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–π fetch –∫–∞–∂–¥—ã–µ 3 –º–∏–Ω—É—Ç—ã
git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
git config fetch.prune true

# 7. –°–æ–∑–¥–∞–µ–º –ª–æ–≥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
mkdir -p logs
print_success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –ª–æ–≥–æ–≤ —Å–æ–∑–¥–∞–Ω–∞"

print_header "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

echo ""
print_info "–¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:"
echo ""
echo "1. ${GREEN}./scripts/git_sync.sh${NC}         - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è"
echo "2. ${GREEN}./scripts/git_sync.sh --auto${NC}   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç"
echo "3. ${GREEN}./scripts/git_sync.sh --once${NC}   - –û–¥–Ω–æ–∫—Ä–∞—Ç–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è"
echo "4. ${GREEN}git sync${NC}                        - –ê–ª–∏–∞—Å –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"
echo "5. ${GREEN}git autopush${NC}                    - –ë—ã—Å—Ç—Ä—ã–π –∫–æ–º–º–∏—Ç –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞"
echo ""
print_warning "Git hooks –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã:"
echo "  - pre-commit:  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º"
echo "  - post-merge:  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø–æ—Å–ª–µ pull"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
read -p "–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏? (y/N): " check_status

if [[ $check_status =~ ^[Yy]$ ]]; then
    ./scripts/git_sync.sh
fi