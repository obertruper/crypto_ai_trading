#!/bin/bash
# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ Vast.ai

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ Vast.ai${NC}"
echo "====================================="

# –í—ã–±–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞
echo -e "\n${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä:${NC}"
echo "1) –ù–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä (ssh1.vast.ai:30421) - –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø"
echo "2) –°—Ç–∞—Ä—ã–π —Å–µ—Ä–≤–µ—Ä (109.198.107.223:48937)"
read -p "–í—ã–±–æ—Ä (1/2) [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1]: " choice

# –ï—Å–ª–∏ –ø—É—Å—Ç–æ–π –≤–≤–æ–¥ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
if [ -z "$choice" ] || [ "$choice" = "1" ]; then
    SSH_HOST="ssh1.vast.ai"
    SSH_PORT="30421"
else
    SSH_HOST="109.198.107.223"
    SSH_PORT="48937"
fi

# SSH –∫–æ–º–∞–Ω–¥–∞
SSH_CMD="ssh -p $SSH_PORT root@$SSH_HOST"

echo -e "\n${GREEN}üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ $SSH_HOST:$SSH_PORT${NC}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
remote_exec() {
    $SSH_CMD "$1" 2>/dev/null
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–±—É—á–µ–Ω–∏—è
echo -e "\n${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±—É—á–µ–Ω–∏—è:${NC}"
remote_exec "ps aux | grep -E 'python.*(train|main)' | grep -v grep" | head -5

# –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
echo -e "\n${BLUE}üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –ª–æ–≥–æ–≤:${NC}"
remote_exec "cd /workspace/crypto_ai_trading && tail -n 20 logs/training_*/training.log 2>/dev/null | grep -E '(–≠–ø–æ—Ö–∞|loss|Learning|Checkpoint|–ú–µ—Ç—Ä–∏–∫–∏)'" || \
remote_exec "cd /workspace && find . -name 'training.log' -type f -exec tail -n 20 {} \; 2>/dev/null | grep -E '(–≠–ø–æ—Ö–∞|loss|Learning|Checkpoint|–ú–µ—Ç—Ä–∏–∫–∏)'"

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ GPU
echo -e "\n${BLUE}üéÆ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ GPU:${NC}"
remote_exec "nvidia-smi --query-gpu=utilization.gpu,memory.used,memory.total --format=csv,noheader" | while read line; do
    echo "   GPU: $line"
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π
echo -e "\n${BLUE}üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏:${NC}"
remote_exec "cd /workspace/crypto_ai_trading && ls -lah models_saved/*.pth 2>/dev/null | tail -5" || \
remote_exec "cd /workspace && find . -name '*.pth' -type f -ls 2>/dev/null | tail -5"

# –ú–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ
echo -e "\n${BLUE}üíø –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:${NC}"
remote_exec "df -h /workspace | tail -1"

# –û–ø—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
echo -e "\n${YELLOW}–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏:${NC}"
echo "1) –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤"
echo "2) –û—Ç–∫—Ä—ã—Ç—å TensorBoard (http://localhost:6007)"
echo "3) –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è SSH —Å–µ—Å—Å–∏—è"
echo "4) –í—ã—Ö–æ–¥"
read -p "–í—ã–±–æ—Ä (1-4): " option

case $option in
    1)
        echo -e "${GREEN}üìä –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)${NC}"
        $SSH_CMD "cd /workspace/crypto_ai_trading && tail -f logs/training_*/training.log | grep -E '(–≠–ø–æ—Ö–∞|loss|Learning|Checkpoint|–ú–µ—Ç—Ä–∏–∫–∏)'"
        ;;
    2)
        echo -e "${GREEN}üåê –û—Ç–∫—Ä—ã–≤–∞—é TensorBoard...${NC}"
        echo "–ü—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–æ–≤..."
        ssh -p $SSH_PORT -L 6007:localhost:6007 root@$SSH_HOST "cd /workspace/crypto_ai_trading && tensorboard --logdir logs/ --port 6007 --bind_all" &
        sleep 3
        open http://localhost:6007 || xdg-open http://localhost:6007
        ;;
    3)
        echo -e "${GREEN}üîå –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è${NC}"
        $SSH_CMD
        ;;
    4)
        echo -e "${GREEN}üëã –í—ã—Ö–æ–¥${NC}"
        exit 0
        ;;
esac