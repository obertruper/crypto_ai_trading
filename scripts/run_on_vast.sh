#!/bin/bash
# –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ Vast.ai —Å–µ—Ä–≤–µ—Ä–µ —Å –≥–∏–±–∫–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ Vast.ai GPU${NC}"

# –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
CONFIG_FILE="config/config.yaml"

# –ò–∑–≤–ª–µ–∫–∞–µ–º SSH –∞–ª–∏–∞—Å –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
SSH_ALIAS=$(python3 -c "
import yaml
import os
with open('$CONFIG_FILE', 'r') as f:
    config = yaml.safe_load(f)
rs = config['remote_server']
# –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ –∫–æ–Ω—Ñ–∏–≥–µ
ssh_alias = rs['ssh_alias']
if ssh_alias.startswith('\${'):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    var_name = ssh_alias.split(':')[0].replace('\${', '')
    default_val = ssh_alias.split(':')[1].rstrip('}')
    ssh_alias = os.environ.get(var_name, default_val)
print(ssh_alias)
")

REMOTE_PATH=$(python3 -c "
import yaml
with open('$CONFIG_FILE', 'r') as f:
    config = yaml.safe_load(f)
print(config['remote_server']['remote_path'])
")

echo -e "\n${YELLOW}üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:${NC}"
echo "   ‚Ä¢ SSH –∞–ª–∏–∞—Å: $SSH_ALIAS"
echo "   ‚Ä¢ Remote path: $REMOTE_PATH"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
echo -e "\n${YELLOW}üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...${NC}"
if ssh $SSH_ALIAS "echo '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ'" > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ${NC}"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ GPU
    GPU_INFO=$(ssh $SSH_ALIAS "nvidia-smi --query-gpu=name,memory.total --format=csv,noheader" 2>/dev/null)
    if [ -n "$GPU_INFO" ]; then
        echo -e "\n${YELLOW}üéÆ –î–æ—Å—Ç—É–ø–Ω—ã–µ GPU:${NC}"
        echo "$GPU_INFO" | while IFS=, read -r gpu_name gpu_memory; do
            echo "   ‚Ä¢ $gpu_name ($gpu_memory)"
        done
    fi
else
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É${NC}"
    echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:${NC}"
    echo "   1. SSH –∞–ª–∏–∞—Å '$SSH_ALIAS' –≤ ~/.ssh/config"
    echo "   2. –ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é: export VAST_SSH_ALIAS=your-alias"
    exit 1
fi

# SSH –∫–æ–º–∞–Ω–¥–∞
SSH_CMD="ssh $SSH_ALIAS"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞–Ω –ª–∏ —Ä–µ–∂–∏–º —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -n "$GPU_TRAINING_MODE" ]; then
    # –†–µ–∂–∏–º –ø–µ—Ä–µ–¥–∞–Ω –∏–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é
    choice=$GPU_TRAINING_MODE
    EPOCHS=${GPU_TRAINING_EPOCHS:-5}
    
    case $choice in
        1)
            MODE="train"  # –ò–∑–º–µ–Ω–µ–Ω–æ —Å "demo" –Ω–∞ "train" –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±—É—á–µ–Ω–∏—è
            ;;
        2)
            MODE="train"
            ;;
        3)
            MODE="train"
            ;;
        *)
            MODE="train"  # –ò–∑–º–µ–Ω–µ–Ω–æ —Å "demo" –Ω–∞ "train"
            ;;
    esac
else
    # –ó–∞–ø—É—Å–∫ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –∫–æ–Ω—Å–æ–ª–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
    echo -e "\n${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞:${NC}"
    echo "1) –î–µ–º–æ –æ–±—É—á–µ–Ω–∏–µ (5 —ç–ø–æ—Ö)"
    echo "2) –ü–æ–ª–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ (100 —ç–ø–æ—Ö)"
    echo "3) –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
    echo -n "–í—ã–±–æ—Ä (1-3): "
    read choice

    case $choice in
        1)
            MODE="train"  # –ò–∑–º–µ–Ω–µ–Ω–æ —Å "demo" –Ω–∞ "train" –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±—É—á–µ–Ω–∏—è
            EPOCHS=5
            ;;
        2)
            MODE="train"
            EPOCHS=100
            ;;
        3)
            echo -n "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ø–æ—Ö: "
            read EPOCHS
            MODE="train"
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä${NC}"
            exit 1
            ;;
    esac
fi

echo -e "\n${YELLOW}üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—É—á–µ–Ω–∏—è:${NC}"
echo "   ‚Ä¢ –†–µ–∂–∏–º: $MODE"
echo "   ‚Ä¢ –≠–ø–æ—Ö: $EPOCHS"
echo "   ‚Ä¢ Batch size: 32"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo -e "\n${YELLOW}üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–ø—É—Å–∫–∞...${NC}"

cat > /tmp/run_training.sh << SCRIPT
#!/bin/bash
cd $REMOTE_PATH

# –ü–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
export USE_CACHE_ONLY='${USE_CACHE_ONLY:-0}'
export MODE='${MODE}'
export EPOCHS=${EPOCHS}

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –µ—Å–ª–∏ –µ—Å—Ç—å
if [ -d 'venv' ]; then
    source venv/bin/activate
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
export CUDA_VISIBLE_DEVICES=0,1  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±–µ GPU
export PYTHONUNBUFFERED=1

# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —ç–ø–æ—Ö –≤ –∫–æ–Ω—Ñ–∏–≥–µ
python -c "
import yaml
with open('config/config.yaml', 'r') as f:
    config = yaml.safe_load(f)
config['model']['epochs'] = \$EPOCHS
config['performance']['device'] = 'cuda'
with open('config/config.yaml', 'w') as f:
    yaml.dump(config, f, default_flow_style=False)
"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p logs

# –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è
echo 'üöÄ –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ GPU...'
echo '–†–µ–∂–∏–º: '\$MODE
echo '–≠–ø–æ—Ö–∏: '\$EPOCHS
echo '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—ç—à: '\$USE_CACHE_ONLY

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ë–î
if nc -z localhost 5555 2>/dev/null; then
    echo '‚úÖ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5555'
    echo 'üìä –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î'
else
    echo '‚ö†Ô∏è  PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5555'
    echo 'üìä –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫—ç—à–∞'
    export USE_CACHE_ONLY=1
fi

# –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è
python3 run_full_pipeline.py --mode \$MODE 2>&1 | tee logs/training_gpu.log
SCRIPT

# –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä
scp /tmp/run_training.sh $SSH_ALIAS:$REMOTE_PATH/run_training.sh

# –ó–∞–ø—É—Å–∫ –≤ tmux
echo -e "\n${YELLOW}üñ•Ô∏è  –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è...${NC}"

$SSH_CMD "
chmod +x $REMOTE_PATH/run_training.sh
# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ tmux
if command -v tmux &> /dev/null; then
    echo '–ó–∞–ø—É—Å–∫ –≤ tmux —Å–µ—Å—Å–∏–∏...'
    tmux new-session -d -s training 'cd $REMOTE_PATH && bash run_training.sh'
    echo '‚úÖ –û–±—É—á–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ tmux —Å–µ—Å—Å–∏–∏ \"training\"'
else
    echo 'tmux –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∑–∞–ø—É—Å–∫ –≤ screen...'
    if command -v screen &> /dev/null; then
        screen -dmS training bash -c 'cd $REMOTE_PATH && bash run_training.sh'
        echo '‚úÖ –û–±—É—á–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ screen —Å–µ—Å—Å–∏–∏ \"training\"'
    else
        echo '–ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ —Å nohup...'
        cd $REMOTE_PATH && nohup bash run_training.sh > logs/training_gpu.log 2>&1 &
        echo '‚úÖ –û–±—É—á–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ —Ñ–æ–Ω–µ'
    fi
fi
"

echo -e "\n${GREEN}‚úÖ –û–±—É—á–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!${NC}"
echo -e "\n${YELLOW}üìå –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo "   ‚Ä¢ –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É: ssh $SSH_ALIAS"
echo "   ‚Ä¢ –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Å—Å–∏–∏: tmux attach -t training"
echo "   ‚Ä¢ –û—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç —Å–µ—Å—Å–∏–∏: Ctrl+B, –∑–∞—Ç–µ–º D"
echo "   ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ GPU: nvidia-smi -l 1"
echo "   ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: tail -f $REMOTE_PATH/logs/training_gpu.log"
echo ""
echo -e "${BLUE}üí° –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ TensorBoard:${NC}"
echo "   ssh -L 6006:localhost:6006 $SSH_ALIAS"
echo "   –ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ http://localhost:6006"

# –Ø–≤–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞
exit 0