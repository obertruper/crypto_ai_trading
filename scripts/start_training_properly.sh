#!/bin/bash
# –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ GPU

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ GPU —Å–µ—Ä–≤–µ—Ä–µ${NC}"

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
HOST="ssh1.vast.ai"
PORT="30421"
REMOTE_PATH="/root/crypto_ai_trading"

# 1. –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
echo -e "${YELLOW}üì§ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...${NC}"
ssh -p $PORT root@$HOST "test -f $REMOTE_PATH/cache/features_cache.pkl" || {
    echo -e "${YELLOW}–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è)...${NC}"
    scp -P $PORT cache/features_cache.pkl root@$HOST:$REMOTE_PATH/cache/
    echo -e "${GREEN}‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã${NC}"
}

# 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ
echo -e "${YELLOW}üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"

ssh -p $PORT root@$HOST << 'ENDSSH'
cd /root/crypto_ai_trading

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p experiments/runs logs models_saved cache

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
python3 -m pip install --quiet torch pandas numpy scikit-learn tensorboard PyYAML

# –ü—Ä–æ–≤–µ—Ä—è–µ–º GPU
echo "üñ•Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ GPU..."
python3 -c "import torch; print(f'GPU –¥–æ—Å—Ç—É–ø–Ω–∞: {torch.cuda.is_available()}'); print(f'GPU: {torch.cuda.get_device_name(0) if torch.cuda.is_available() else \"–ù–µ—Ç\"}')"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π TensorBoard
pkill -f tensorboard

# –ó–∞–ø—É—Å–∫–∞–µ–º TensorBoard
echo "üìä –ó–∞–ø—É—Å–∫ TensorBoard..."
nohup tensorboard --logdir=experiments/runs --port=6006 --host=0.0.0.0 > logs/tensorboard.log 2>&1 &
sleep 2

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ –≤ tmux
echo "üß† –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è..."
tmux kill-session -t training 2>/dev/null
tmux new-session -d -s training "cd /root/crypto_ai_trading && python3 run_full_pipeline.py --mode demo 2>&1 | tee logs/training.log"

echo "‚úÖ –í—Å–µ –∑–∞–ø—É—â–µ–Ω–æ!"
ENDSSH

# 3. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º SSH —Ç—É–Ω–Ω–µ–ª—å
echo -e "${YELLOW}üîó –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—É–Ω–Ω–µ–ª—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...${NC}"
pkill -f "ssh.*6006.*$HOST"
ssh -f -N -L 6006:localhost:6006 -p $PORT root@$HOST

echo -e "${GREEN}‚úÖ –ì–æ—Ç–æ–≤–æ!${NC}"
echo ""
echo -e "${BLUE}üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:${NC}"
echo "   ‚Ä¢ TensorBoard: http://localhost:6006"
echo "   ‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –æ–±—É—á–µ–Ω–∏—é: ssh -p $PORT root@$HOST 'tmux attach -t training'"
echo "   ‚Ä¢ –õ–æ–≥–∏: ssh -p $PORT root@$HOST 'tail -f /root/crypto_ai_trading/logs/training.log'"
echo ""
echo -e "${YELLOW}üí° TensorBoard –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –ª–æ–≥–∏–Ω–∞/–ø–∞—Ä–æ–ª—è${NC}"