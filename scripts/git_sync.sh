#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å GitHub
# –ê–≤—Ç–æ—Ä: Claude –¥–ª—è crypto_ai_trading

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    echo -e "${BLUE}[$(date '+%H:%M:%S')]${NC} $1"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "main.py" ] || [ ! -d ".git" ]; then
    print_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ crypto_ai_trading!"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
check_changes() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    LOCAL_CHANGES=$(git status --porcelain | wc -l)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    git fetch origin main --quiet
    REMOTE_CHANGES=$(git log HEAD..origin/main --oneline | wc -l)
    
    echo "$LOCAL_CHANGES $REMOTE_CHANGES"
}

# –§—É–Ω–∫—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
sync_repository() {
    print_status "üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å GitHub..."
    
    # 1. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    STASH_OUTPUT=$(git stash push -m "Auto-stash before sync $(date '+%Y-%m-%d %H:%M:%S')" 2>&1)
    STASHED=false
    if [[ $STASH_OUTPUT == *"Saved working directory"* ]]; then
        STASHED=true
        print_success "–õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã"
    fi
    
    # 2. –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å GitHub
    print_status "üì• –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å GitHub..."
    if git pull origin main --rebase; then
        print_success "–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å GitHub –ø–æ–ª—É—á–µ–Ω—ã"
    else
        print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
        if [ "$STASHED" = true ]; then
            git stash pop
        fi
        return 1
    fi
    
    # 3. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if [ "$STASHED" = true ]; then
        print_status "üì§ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
        if git stash pop; then
            print_success "–õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        else
            print_warning "–ö–æ–Ω—Ñ–ª–∏–∫—Ç –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
            print_warning "–†–∞–∑—Ä–µ—à–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤—Ä—É—á–Ω—É—é –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: git add . && git rebase --continue"
            return 1
        fi
    fi
    
    # 4. –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if [ $(git status --porcelain | wc -l) -gt 0 ]; then
        print_status "üìù –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ..."
        git add .
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
        COMMIT_MSG="üîÑ Auto-sync: $(date '+%Y-%m-%d %H:%M:%S')

Changes synced from local development"
        
        git commit -m "$COMMIT_MSG" --quiet
        print_success "–°–æ–∑–¥–∞–Ω –∫–æ–º–º–∏—Ç —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏"
    fi
    
    # 5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ GitHub
    print_status "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ GitHub..."
    if git push origin main; then
        print_success "–ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ GitHub"
    else
        print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
        return 1
    fi
    
    print_success "‚ú® –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
interactive_sync() {
    clear
    echo "======================================"
    echo "üîÑ Git Sync –¥–ª—è crypto_ai_trading"
    echo "======================================"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    read LOCAL_CHANGES REMOTE_CHANGES <<< $(check_changes)
    
    echo ""
    if [ $LOCAL_CHANGES -gt 0 ]; then
        print_warning "–õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: $LOCAL_CHANGES —Ñ–∞–π–ª–æ–≤"
        git status --short
    else
        print_success "–ù–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    fi
    
    echo ""
    if [ $REMOTE_CHANGES -gt 0 ]; then
        print_warning "–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ GitHub: $REMOTE_CHANGES –∫–æ–º–º–∏—Ç–æ–≤"
        git log HEAD..origin/main --oneline
    else
        print_success "–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ GitHub"
    fi
    
    if [ $LOCAL_CHANGES -eq 0 ] && [ $REMOTE_CHANGES -eq 0 ]; then
        print_success "üéâ –í—Å—ë —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ!"
        return 0
    fi
    
    echo ""
    echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    echo "1) üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å (pull + push)"
    echo "2) üì• –¢–æ–ª—å–∫–æ –ø–æ–ª—É—á–∏—Ç—å —Å GitHub (pull)"
    echo "3) üì§ –¢–æ–ª—å–∫–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ GitHub (push)"
    echo "4) üìä –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å"
    echo "5) ‚ùå –û—Ç–º–µ–Ω–∞"
    echo ""
    read -p "–í–∞—à –≤—ã–±–æ—Ä (1-5): " choice
    
    case $choice in
        1)
            sync_repository
            ;;
        2)
            print_status "üì• –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å GitHub..."
            if git pull origin main; then
                print_success "–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã"
            else
                print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
            fi
            ;;
        3)
            if [ $LOCAL_CHANGES -gt 0 ]; then
                print_status "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ GitHub..."
                git add .
                read -p "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: " commit_msg
                git commit -m "$commit_msg"
                git push origin main
                print_success "–ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã"
            else
                print_warning "–ù–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏"
            fi
            ;;
        4)
            echo ""
            print_status "üìä –î–µ—Ç–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å:"
            git status
            echo ""
            print_status "üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã:"
            git log --oneline -10
            ;;
        5)
            print_warning "–û—Ç–º–µ–Ω–µ–Ω–æ"
            ;;
        *)
            print_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
auto_sync() {
    while true; do
        clear
        print_status "ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç"
        print_status "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
        echo ""
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º
        read LOCAL_CHANGES REMOTE_CHANGES <<< $(check_changes)
        
        if [ $LOCAL_CHANGES -gt 0 ] || [ $REMOTE_CHANGES -gt 0 ]; then
            print_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º..."
            sync_repository
        else
            print_success "–í—Å—ë —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ"
        fi
        
        # –ñ–¥–µ–º 5 –º–∏–Ω—É—Ç
        print_status "–°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç..."
        sleep 300
    done
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main() {
    if [ "$1" == "--auto" ]; then
        auto_sync
    elif [ "$1" == "--once" ]; then
        sync_repository
    else
        interactive_sync
    fi
}

# –ó–∞–ø—É—Å–∫
main "$@"