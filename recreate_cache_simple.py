#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∫—ç—à–∞ –¥–∞–Ω–Ω—ã—Ö
"""

import sys
import os
from pathlib import Path
import shutil

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from utils.logger import get_logger

def main():
    logger = get_logger("CacheRecreation")
    
    # –ü—É—Ç—å –∫ –∫—ç—à—É
    cache_dir = Path('data/processed')
    
    logger.info("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫—ç—à–∞...")
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    cache_files = [
        'train_data.parquet',
        'val_data.parquet', 
        'test_data.parquet',
        'feature_columns.pkl',
        'target_columns.pkl'
    ]
    
    for file_name in cache_files:
        file_path = cache_dir / file_name
        if file_path.exists():
            file_path.unlink()
            logger.info(f"   ‚úÖ –£–¥–∞–ª–µ–Ω: {file_name}")
    
    logger.info("\nüìä –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ main.py –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫—ç—à–∞:")
    logger.info("   python main.py --mode train")
    logger.info("\nüí° –ù–æ–≤—ã–π –∫—ç—à –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")

if __name__ == "__main__":
    main()