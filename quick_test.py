"""–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –º–æ–¥–µ–ª–∏ –Ω–∞ –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ"""
import torch
import numpy as np
import yaml

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ production
with open('config/config_production.yaml', 'r') as f:
    config = yaml.safe_load(f)

# –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–±—É—á–µ–Ω–∏—è –∏–∑ –ª–æ–≥–æ–≤
print("üìä –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –û–ë–£–ß–ï–ù–ò–Ø")
print("="*50)

print("\nüéØ –§–∏–Ω–∞–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏:")
print("- Direction Accuracy: 36.9%")
print("- Train Loss: 0.6196") 
print("- Val Loss: 2.2187")
print("- Best Val Loss: 2.1051")
print("- Win Rate: 45.8%")

print("\nüìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π:")
print("- LONG: 46.5% (–∏—Å—Ç–∏–Ω–Ω–æ–µ: 37.7%)")
print("- SHORT: 53.1% (–∏—Å—Ç–∏–Ω–Ω–æ–µ: 37.0%)")
print("- FLAT: 0.4% (–∏—Å—Ç–∏–Ω–Ω–æ–µ: 25.4%)")

print("\n‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–´:")
print("1. –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ü–ï–†–ï–û–ë–£–ß–ï–ù–ò–ï:")
print(f"   - Overfitting Ratio: {2.2187/0.6196:.2f}x")
print("   - Val Loss –≤ 3.6 —Ä–∞–∑–∞ –±–æ–ª—å—à–µ Train Loss!")

print("\n2. –î–ò–°–ë–ê–õ–ê–ù–° –ö–õ–ê–°–°–û–í:")
print("   - –ú–æ–¥–µ–ª—å –ø–æ—á—Ç–∏ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç FLAT (0.4% vs 25.4%)")
print("   - –ü–µ—Ä–µ–æ—Ü–µ–Ω–∏–≤–∞–µ—Ç LONG/SHORT —Å–∏–≥–Ω–∞–ª—ã")

print("\n3. –ù–ò–ó–ö–ê–Ø –¢–û–ß–ù–û–°–¢–¨:")
print("   - Direction Accuracy 36.9% (—Å–ª—É—á–∞–π–Ω–∞—è ~33.3%)")
print("   - –£–ª—É—á—à–µ–Ω–∏–µ –≤—Å–µ–≥–æ –Ω–∞ 3.6% –æ—Ç —Å–ª—É—á–∞–π–Ω–æ–≥–æ —É–≥–∞–¥—ã–≤–∞–Ω–∏—è")

print("\nüí° –†–ï–®–ï–ù–ò–Ø –î–õ–Ø –ë–û–†–¨–ë–´ –° –ü–ï–†–ï–û–ë–£–ß–ï–ù–ò–ï–ú:")
print("="*50)

print("\n1. –£–°–ò–õ–ò–¢–¨ –†–ï–ì–£–õ–Ø–†–ò–ó–ê–¶–ò–Æ:")
print("   - dropout: 0.5 ‚Üí 0.7")
print("   - attention_dropout: 0.1 ‚Üí 0.3")
print("   - weight_decay: 0.01 ‚Üí 0.1")
print("   - gradient_clip: 0.1 ‚Üí 0.5")

print("\n2. –£–ú–ï–ù–¨–®–ò–¢–¨ –†–ê–ó–ú–ï–† –ú–û–î–ï–õ–ò:")
print("   - d_model: 384 ‚Üí 256")
print("   - d_ff: 768 ‚Üí 512")
print("   - e_layers: 2 ‚Üí 1")

print("\n3. –ò–ó–ú–ï–ù–ò–¢–¨ –û–ë–£–ß–ï–ù–ò–ï:")
print("   - early_stopping_patience: 30 ‚Üí 10")
print("   - learning_rate: 0.00001 ‚Üí 0.00005")
print("   - batch_size: 512 ‚Üí 256")
print("   - –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –∞—É–≥–º–µ–Ω—Ç–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö")

print("\n4. –ë–ê–õ–ê–ù–°–ò–†–û–í–ö–ê –ö–õ–ê–°–°–û–í:")
print("   - class_weights: [1.0, 1.0, 1.5] (—É–≤–µ–ª–∏—á–∏—Ç—å –≤–µ—Å FLAT)")
print("   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Focal Loss —Å gamma=3.0")
print("   - –î–æ–±–∞–≤–∏—Ç—å auxiliary loss –¥–ª—è FLAT detection")

print("\n5. –ê–ù–°–ê–ú–ë–õ–ò–†–û–í–ê–ù–ò–ï:")
print("   - –û–±—É—á–∏—Ç—å 3-5 –º–æ–¥–µ–ª–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ seed")
print("   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å voting –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π")
print("   - –≠—Ç–æ —Å–Ω–∏–∑–∏—Ç variance –∏ —É–ª—É—á—à–∏—Ç –æ–±–æ–±—â–µ–Ω–∏–µ")

print("\nüìù –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ô config_antioverfit.yaml:")
config_new = {
    'model': {
        'dropout': 0.7,
        'attention_dropout': 0.3, 
        'weight_decay': 0.1,
        'd_model': 256,
        'd_ff': 512,
        'e_layers': 1,
        'early_stopping_patience': 10,
        'learning_rate': 0.00005,
        'batch_size': 256,
        'label_smoothing': 0.2,
        'mixup_alpha': 0.5
    },
    'loss': {
        'class_weights': [1.0, 1.0, 1.5],
        'focal_gamma': 3.0,
        'wrong_direction_penalty': 1.5
    }
}

print("\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")