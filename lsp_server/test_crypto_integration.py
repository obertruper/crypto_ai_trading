#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ LSP —Å–µ—Ä–≤–µ—Ä–∞ —Å –ø—Ä–æ–µ–∫—Ç–æ–º crypto_ai_trading
"""

import sys
from pathlib import Path
import json

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from mcp_lsp_bridge import MCPLSPBridge

def test_lsp_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é LSP —Å –ø—Ä–æ–µ–∫—Ç–æ–º crypto_ai_trading"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ LSP —Å–µ—Ä–≤–µ—Ä–∞ —Å crypto_ai_trading...\n")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ—Å—Ç–∞
    bridge = MCPLSPBridge()
    
    print(f"‚úÖ –ö–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞: {bridge.project_root}")
    print(f"‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è LSP –¥–∞–Ω–Ω—ã—Ö: {bridge.lsp_data_dir}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
    important_dirs = ['config', 'data', 'models', 'trading', 'training', 'utils']
    
    print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:")
    for dir_name in important_dirs:
        dir_path = bridge.project_root / dir_name
        if dir_path.exists():
            print(f"  ‚úÖ {dir_name}/ - –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print(f"  ‚ùå {dir_name}/ - –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã
    key_files = [
        'main.py',
        'config/config.yaml',
        'models/patchtst.py',
        'training/trainer.py',
        'data/data_loader.py'
    ]
    
    print("\nüìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤:")
    for file_path in key_files:
        full_path = bridge.project_root / file_path
        if full_path.exists():
            print(f"  ‚úÖ {file_path} - –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"  ‚ùå {file_path} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Ñ–∞–π–ª–∞
    print("\nüîß –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:")
    test_file = bridge.project_root / "models" / "patchtst.py"
    if test_file.exists():
        print(f"  üìÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª: {test_file.name}")
        print(f"  üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {test_file.stat().st_size} –±–∞–π—Ç")
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–æ–≤ bridge –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        # context = bridge.get_file_context(str(test_file))
        print("  ‚úÖ –§–∞–π–ª –≥–æ—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ LSP —Å–µ—Ä–≤–µ—Ä–æ–º")
    
    print("\n‚ú® –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è LSP —Å–µ—Ä–≤–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!")

if __name__ == "__main__":
    test_lsp_integration()